{"version":3,"sources":["components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","className","to","onClick","src","alt","App","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA8FeA,MA3Ff,WAAmB,IAAD,EACUC,oBAAS,GADnB,mBACTC,EADS,KACFC,EADE,OAEYF,oBAAS,GAFrB,mBAETG,EAFS,KAEDC,EAFC,KAKVC,EAAkB,kBAAMH,GAAS,IAEjCI,EAAa,WACbC,OAAOC,YAAc,IACvBJ,GAAU,GAEVA,GAAU,IAYd,OARAK,qBAAU,WACRH,MACC,IAEHC,OAAOG,iBAAiB,SAAUJ,GAKhC,mCACE,qBAAKK,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKC,GAAG,IAAID,UAAU,cAAcE,QAASR,EAA7C,SAEE,qBAAKM,UAAU,OAAf,SACA,qBAAKG,IAAI,0CAA0CC,IAAI,SAIzD,qBAAKJ,UAAU,YAAYE,QA9Bf,kBAAMX,GAAUD,IA8B5B,SACE,mBAAGU,UAAWV,EAAQ,eAAiB,kBAEzC,qBAAIU,UAAWV,EAAQ,kBAAoB,WAA3C,UACE,oBAAIU,UAAU,WAAd,SACE,qBAAKC,GAAG,IAAID,UAAU,YAAYE,QAASR,EAA3C,oBAIF,oBAAIM,UAAU,WAAd,SACE,qBACEC,GAAG,SACHD,UAAU,YACVE,QAASR,EAHX,qBAQF,oBAAIM,UAAU,WAAd,SACE,qBACEC,GAAG,WACHD,UAAU,YACVE,QAASR,EAHX,wBAQF,oBAAIM,UAAU,WAAd,SACE,qBACEC,GAAG,WACHD,UAAU,YACVE,QAASR,EAHX,wBAmBHF,GAAU,sBAAKS,GAAG,WAAR,UAAmB,sBAAKD,UAAU,QAAf,UAAuB,qBAAKG,IAAI,oCAAoCC,IAAI,KAAI,qBAAKD,IAAI,qCAAqCC,IAAI,QAAjJ,eC3DNC,MArBf,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,cAAC,EAAD,IACA,yBAAQA,UAAU,aAAlB,UACE,sCACO,8CADP,0BAGA,mBACEA,UAAU,WACVM,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,gCCAOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c968fcc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n          <div to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n\r\n            <div className=\"logo\">\r\n            <img src=\"https://i.ibb.co/mJjtp75/logo-Apple.png\" alt=\"\"/>\r\n            </div>\r\n\r\n          </div>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <div to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </div>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <div\r\n                to='/story'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                About\r\n              </div>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <div\r\n                to='/gallery'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Products\r\n              </div>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <div\r\n                to='/gallery'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Price\r\n              </div>\r\n            </li>\r\n\r\n            {/* <li className='nav-item'>\r\n              <div className=\"logo2\">\r\n                <img src=\"https://i.ibb.co/2tVDFZY/lupa.png\" alt=\"\"/>\r\n              </div>\r\n\r\n              <div className=\"logo3\">\r\n                <img src=\"https://i.ibb.co/n1rLbtf/cesta.png\" alt=\"\"/>\r\n              </div>\r\n            </li> */}\r\n          </ul>\r\n          {button && <div to='/sign-up'><div className=\"logo2\"><img src=\"https://i.ibb.co/2tVDFZY/lupa.png\" alt=\"\"/><img src=\"https://i.ibb.co/n1rLbtf/cesta.png\" alt=\"\"/></div> </div>}\r\n\r\n          \r\n          \r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}